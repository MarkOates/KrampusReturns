parent_classes:


  - class: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2DFactory
    scope: public
    init_with: ''


functions:


  - name: create_krampus
    type: KrampusReturns::Entities::Krampus*
    parameters:
      - name: on_map
        type: std::string
        default_argument: '"[unset-on_map]"'
      - name: x
        type: float
        default_argument: 0.0f
      - name: y
        type: float
        default_argument: 0.0f
    guards: [ get_animation_book() ]
    body: |
      using namespace AllegroFlare::Prototypes::Platforming2D::EntityFlagNames;

      KrampusReturns::Entities::Krampus *result = new KrampusReturns::Entities::Krampus();
      result->set_animation_book(get_animation_book());
      result->initialize();

      result->get_place_ref().position = { x, y };
      result->set(ON_MAP_NAME, on_map);

      //if (init_entities_drawing_debug) result->set_draw_debug(true);
      if (true) result->set_draw_debug(true);

      return result;
    body_dependency_symbols:
      - KrampusReturns::Entities::Krampus
      - AllegroFlare::Prototypes::Platforming2D::EntityFlagNames


dependencies:


  - symbol: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2DFactory
    headers: [ AllegroFlare/Prototypes/Platforming2D/Entities/Basic2DFactory.hpp ]
  - symbol: AllegroFlare::Prototypes::Platforming2D::EntityFlagNames
    headers: [ AllegroFlare/Prototypes/Platforming2D/EntityFlagNames.hpp ]
  - symbol: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2D
    headers: [ AllegroFlare/Prototypes/Platforming2D/Entities/Basic2D.hpp ]
  - symbol: KrampusReturns::Entities::Krampus
    headers: [ KrampusReturns/Entities/Krampus.hpp ]


